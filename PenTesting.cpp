#include "base/header.hpp"

class PenTesting {
public:
	static constexpr bool kWriteCaseNumber = false;
	static constexpr bool kMultiTest = true;
	void solve(std::istream& in, std::ostream& out) {
		int testsCount, n, c;
		in >> testsCount >> n >> c;
		auto pens = make_vector<int>(testsCount, n, 0);
		for (auto& test : pens) {
			std::iota(all(test), 0);
			std::random_shuffle(all(test));
		}
		bool play = true;
		while (play) {
			for (auto& test : pens) {
				
			}
		}
		out << std::endl;
		for (int i : range(testsCount)) {
			const int a = Random::get(1, n - 1);
			const int b = Random::get(a, n);
			out << a << " " << b << " ";
		}
		out << std::endl;
	}


	PenTesting() {}


	static constexpr bool kUseCustomChecker = false;
	bool check(std::istringstream in, std::istringstream jury, std::istringstream out) {
		return true;
	}


	static constexpr size_t kGeneratedTestsCount = 0;
	static constexpr bool kStopAfterFirstFail = false;
	static void generate_test(std::ostream& test) {}

};
